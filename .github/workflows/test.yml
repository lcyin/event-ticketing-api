name: Run Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    # Define the services that the job needs
    services:
      # Label for the service container
      postgres:
        # Use the official PostgreSQL Docker image
        image: postgres:14-alpine
        # Environment variables for the database service
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        # Options to wait for the database to be ready
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Map port 5432 of the service to port 5432 on the runner
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run test database migrations
        # This step uses the service container's database
        run: npm run test:migration:run
        env:
          # These environment variables allow your app to connect to the service
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
          NODE_ENV: test

      - name: Run tests
        # Your tests will also connect to the same database
        run: npm test
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
          NODE_ENV: test
